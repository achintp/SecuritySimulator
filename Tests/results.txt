[<AgentClasses.Attacker object at 0x7fe13fec3d50>]
[<AgentClasses.Defender object at 0x7fe13fec3ed0>]
[<AgentClasses.Attacker object at 0x7fe13fec3fd0>]
[<AgentClasses.Defender object at 0x7fe13fec6150>]
Simulator successfully created
['ServerA', 'ServerB', 'ServerC']
Testing updateInformation------------------------------


[<AgentClasses.Attacker object at 0x7fe13fec3f10>]
[<AgentClasses.Defender object at 0x7fe13fec3d50>]
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerC
[(2, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (30, 0, -1)]
[(2, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]


Event Queue---------------------------------------------


[(2, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]
Event popped-------------------
(2, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0)
ServerC
<StateClasses.Resource object at 0x7fe13fec3e10>
Resource acquired--------------
<StateClasses.Resource object at 0x7fe13fec3e10>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}}


Asking for actions------------------------------


Random server is ServerB
[(4, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]
Defender Action exists-------------------
(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(4, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]
Event popped-------------------
(4, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0)
ServerB
<StateClasses.Resource object at 0x7fe13fec3e50>
Resource acquired--------------
<StateClasses.Resource object at 0x7fe13fec3e50>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerC': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}}


Asking for actions------------------------------


Random server is ServerC
[(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (6, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (30, 0, -1)]
Defender Action exists-------------------
(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (6, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (30, 0, -1)]
Event popped-------------------
(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)
ServerC
<StateClasses.Resource object at 0x7fe13fec3e10>
Resource acquired--------------
<StateClasses.Resource object at 0x7fe13fec3e10>
Reimaging now?----------------------
Reimaging--------------------ServerC

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}
{'ServerA': <StateClasses.Resource object at 0x7fe13fec3cd0>, 'ServerB': <StateClasses.Resource object at 0x7fe13fec3e50>}
{'ServerC': <StateClasses.Resource object at 0x7fe13fec3e10>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerB
[(6, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (9, 'ServerC', 2), (30, 0, -1)]
[(6, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (8, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (9, 'ServerC', 2), (30, 0, -1)]


Event Queue---------------------------------------------


[(6, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (8, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (9, 'ServerC', 2), (30, 0, -1)]
Event popped-------------------
(6, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0)
ServerB
<StateClasses.Resource object at 0x7fe13fec3e50>
Resource acquired--------------
<StateClasses.Resource object at 0x7fe13fec3e50>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerB
[(8, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (8, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 0), (9, 'ServerC', 2), (30, 0, -1)]
Defender Action exists-------------------
(8, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)


Event Queue---------------------------------------------


[(8, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (8, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 0), (9, 'ServerC', 2), (30, 0, -1)]
Event popped-------------------
(8, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)
ServerB
<StateClasses.Resource object at 0x7fe13fec3e50>
Resource acquired--------------
<StateClasses.Resource object at 0x7fe13fec3e50>
Reimaging now?----------------------
Reimaging--------------------ServerB

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}
{'ServerA': <StateClasses.Resource object at 0x7fe13fec3cd0>}
{'ServerB': <StateClasses.Resource object at 0x7fe13fec3e50>, 'ServerC': <StateClasses.Resource object at 0x7fe13fec3e10>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerA
[(9, 'ServerC', 2), (10, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (13, 'ServerB', 2), (30, 0, -1)]
[(9, 'ServerC', 2), (10, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (12, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (13, 'ServerB', 2), (30, 0, -1)]


Event Queue---------------------------------------------


[(9, 'ServerC', 2), (10, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (12, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (13, 'ServerB', 2), (30, 0, -1)]
Event popped-------------------
(9, 'ServerC', 2)
S
None
[<AgentClasses.Attacker object at 0x7f17e3009c50>]
[<AgentClasses.Defender object at 0x7f17e3009d90>]
[<AgentClasses.Attacker object at 0x7f17e3009e90>]
[<AgentClasses.Defender object at 0x7f17e3009fd0>]
Simulator successfully created
['ServerA', 'ServerB', 'ServerC']
Testing updateInformation------------------------------


[<AgentClasses.Attacker object at 0x7f17e3009dd0>]
[<AgentClasses.Defender object at 0x7f17e3009c50>]
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerB
[(2, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (30, 0, -1)]
[(2, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]


Event Queue---------------------------------------------


[(2, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]
Event popped-------------------
(2, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0)
ServerB
<StateClasses.Resource object at 0x7f17e3009d10>
Resource acquired--------------
<StateClasses.Resource object at 0x7f17e3009d10>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerA
[(4, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]
Defender Action exists-------------------
(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(4, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]
Event popped-------------------
(4, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0)
ServerA
<StateClasses.Resource object at 0x7f17e3009c10>
Resource acquired--------------
<StateClasses.Resource object at 0x7f17e3009c10>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'COMPR', 'Control': 'ATT', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerB': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerB
[(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (6, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (30, 0, -1)]
Defender Action exists-------------------
(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (6, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (30, 0, -1)]
Event popped-------------------
(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)
ServerC
<StateClasses.Resource object at 0x7f17e3009cd0>
Resource acquired--------------
<StateClasses.Resource object at 0x7f17e3009cd0>
Reimaging now?----------------------
Reimaging--------------------ServerC

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}
{'ServerA': <StateClasses.Resource object at 0x7f17e3009c10>, 'ServerB': <StateClasses.Resource object at 0x7f17e3009d10>}
{'ServerC': <StateClasses.Resource object at 0x7f17e3009cd0>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'COMPR', 'Control': 'ATT', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerB': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerB
[(6, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (9, 'ServerC', 2), (30, 0, -1)]
[(6, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (8, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (9, 'ServerC', 2), (30, 0, -1)]


Event Queue---------------------------------------------


[(6, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (8, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (9, 'ServerC', 2), (30, 0, -1)]
Event popped-------------------
(6, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0)
ServerB
<StateClasses.Resource object at 0x7f17e3009d10>
Resource acquired--------------
<StateClasses.Resource object at 0x7f17e3009d10>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'COMPR', 'Control': 'ATT', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerB': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerB
[(8, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (8, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 0), (9, 'ServerC', 2), (30, 0, -1)]
Defender Action exists-------------------
(8, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)


Event Queue---------------------------------------------


[(8, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (8, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 0), (9, 'ServerC', 2), (30, 0, -1)]
Event popped-------------------
(8, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)
ServerB
<StateClasses.Resource object at 0x7f17e3009d10>
Resource acquired--------------
<StateClasses.Resource object at 0x7f17e3009d10>
Reimaging now?----------------------
Reimaging--------------------ServerB

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}
{'ServerA': <StateClasses.Resource object at 0x7f17e3009c10>}
{'ServerB': <StateClasses.Resource object at 0x7f17e3009d10>, 'ServerC': <StateClasses.Resource object at 0x7f17e3009cd0>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'COMPR', 'Control': 'ATT', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


[<AgentClasses.Attacker object at 0x7f9187730c90>]
[<AgentClasses.Defender object at 0x7f9187730dd0>]
[<AgentClasses.Attacker object at 0x7f9187730ed0>]
[<AgentClasses.Defender object at 0x7f9187735050>]
Simulator successfully created
['ServerA', 'ServerB', 'ServerC']
Testing updateInformation------------------------------


[<AgentClasses.Attacker object at 0x7f9187730e10>]
[<AgentClasses.Defender object at 0x7f9187730c90>]
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerB
[(2, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (30, 0, -1)]
[(2, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]


Event Queue---------------------------------------------


[(2, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]
Event popped-------------------
(2, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0)
ServerB
<StateClasses.Resource object at 0x7f9187730d50>
Resource acquired--------------
<StateClasses.Resource object at 0x7f9187730d50>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'COMPR', 'Control': 'ATT', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerA
[(4, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]
Defender Action exists-------------------
(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(4, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]
Event popped-------------------
(4, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0)
ServerA
<StateClasses.Resource object at 0x7f9187730c50>
Resource acquired--------------
<StateClasses.Resource object at 0x7f9187730c50>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'COMPR', 'Control': 'ATT', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerB': {'Status': 'COMPR', 'Control': 'ATT', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerC
[(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (6, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (30, 0, -1)]
Defender Action exists-------------------
(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (6, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (30, 0, -1)]
Event popped-------------------
(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)
ServerC
<StateClasses.Resource object at 0x7f9187730d10>
Resource acquired--------------
<StateClasses.Resource object at 0x7f9187730d10>
Reimaging now?----------------------
Reimaging--------------------ServerC

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}
{'ServerA': <StateClasses.Resource object at 0x7f9187730c50>, 'ServerB': <StateClasses.Resource object at 0x7f9187730d50>}
{'ServerC': <StateClasses.Resource object at 0x7f9187730d10>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'COMPR', 'Control': 'ATT', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerB': {'Status': 'COMPR', 'Control': 'ATT', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


/////////////////EMPTY///////////////


[-1, (9, 'ServerC', 2), (30, 0, -1)]
[<AgentClasses.Attacker object at 0x7fa4a7aa7c10>]
[<AgentClasses.Defender object at 0x7fa4a7aa7d50>]
[<AgentClasses.Attacker object at 0x7fa4a7aa7e50>]
[<AgentClasses.Defender object at 0x7fa4a7aa7f90>]
Simulator successfully created
['ServerA', 'ServerB', 'ServerC']
Testing updateInformation------------------------------


[<AgentClasses.Attacker object at 0x7fa4a7aa7d90>]
[<AgentClasses.Defender object at 0x7fa4a7aa7c10>]
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerA
[(2, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (30, 0, -1)]
[(2, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]


Event Queue---------------------------------------------


[(2, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]
Event popped-------------------
(2, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0)
ServerA
<StateClasses.Resource object at 0x7fa4a7aa7bd0>
Resource acquired--------------
<StateClasses.Resource object at 0x7fa4a7aa7bd0>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerC
[(4, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]
Defender Action exists-------------------
(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(4, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]
Event popped-------------------
(4, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0)
ServerA
<StateClasses.Resource object at 0x7fa4a7aa7bd0>
Resource acquired--------------
<StateClasses.Resource object at 0x7fa4a7aa7bd0>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerA
[(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (6, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (30, 0, -1)]
Defender Action exists-------------------
(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (6, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (30, 0, -1)]
Event popped-------------------
(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)
ServerC
<StateClasses.Resource object at 0x7fa4a7aa7c90>
Resource acquired--------------
<StateClasses.Resource object at 0x7fa4a7aa7c90>
Reimaging now?----------------------
Reimaging--------------------ServerC

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}
{'ServerA': <StateClasses.Resource object at 0x7fa4a7aa7bd0>, 'ServerB': <StateClasses.Resource object at 0x7fa4a7aa7cd0>}
{'ServerC': <StateClasses.Resource object at 0x7fa4a7aa7c90>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerB
[(6, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 0), (9, 'ServerC', 2), (30, 0, -1)]
[(6, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 0), (8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 1), (9, 'ServerC', 2), (30, 0, -1)]


Event Queue---------------------------------------------


[(6, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 0), (8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 1), (9, 'ServerC', 2), (30, 0, -1)]
Event popped-------------------
(6, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 0)
ServerA
<StateClasses.Resource object at 0x7fa4a7aa7bd0>
Resource acquired--------------
<StateClasses.Resource object at 0x7fa4a7aa7bd0>
[<AgentClasses.Attacker object at 0x7f9b85fb1d10>]
[<AgentClasses.Defender object at 0x7f9b85fb1e90>]
[<AgentClasses.Attacker object at 0x7f9b85fb1f90>]
[<AgentClasses.Defender object at 0x7f9b85fb5110>]
Simulator successfully created
['ServerA', 'ServerB', 'ServerC']
Testing updateInformation------------------------------


[<AgentClasses.Attacker object at 0x7f9b85fb1ed0>]
[<AgentClasses.Defender object at 0x7f9b85fb1d10>]
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerC
[(2, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (30, 0, -1)]
[(2, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]


Event Queue---------------------------------------------


[(2, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]
Event popped-------------------
(2, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0)
ServerC
<StateClasses.Resource object at 0x7f9b85fb1dd0>
Resource acquired--------------
<StateClasses.Resource object at 0x7f9b85fb1dd0>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}}


Asking for actions------------------------------


Random server is ServerA
[(4, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]
Defender Action exists-------------------
(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(4, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]
Event popped-------------------
(4, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0)
ServerA
<StateClasses.Resource object at 0x7f9b85fb1c90>
Resource acquired--------------
<StateClasses.Resource object at 0x7f9b85fb1c90>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}}


Asking for actions------------------------------


Random server is ServerC
[(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (6, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (30, 0, -1)]
Defender Action exists-------------------
(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (6, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (30, 0, -1)]
Event popped-------------------
(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)
ServerC
<StateClasses.Resource object at 0x7f9b85fb1dd0>
Resource acquired--------------
<StateClasses.Resource object at 0x7f9b85fb1dd0>
Reimaging now?----------------------
Reimaging--------------------ServerC

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}
{'ServerA': <StateClasses.Resource object at 0x7f9b85fb1c90>, 'ServerB': <StateClasses.Resource object at 0x7f9b85fb1e10>}
{'ServerC': <StateClasses.Resource object at 0x7f9b85fb1dd0>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerA
[(6, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (9, 'ServerC', 2), (30, 0, -1)]
[(6, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (9, 'ServerC', 2), (30, 0, -1)]


Event Queue---------------------------------------------


[(6, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (9, 'ServerC', 2), (30, 0, -1)]
Event popped-------------------
(6, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0)
ServerB
<StateClasses.Resource object at 0x7f9b85fb1e10>
Resource acquired--------------
<StateClasses.Resource object at 0x7f9b85fb1e10>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerB': {'Status': 'COMPR', 'Control': 'ATT', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerA
[(8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (9, 'ServerC', 2), (30, 0, -1)]
Defender Action exists-------------------
(8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)


Event Queue---------------------------------------------


[(8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (9, 'ServerC', 2), (30, 0, -1)]
Event popped-------------------
(8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0)
ServerA
<StateClasses.Resource object at 0x7f9b85fb1c90>
Resource acquired--------------
<StateClasses.Resource object at 0x7f9b85fb1c90>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'COMPR', 'Control': 'ATT', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}, 'ServerB': {'Status': 'COMPR', 'Control': 'ATT', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


/////////////////EMPTY///////////////


Defender Action exists-------------------
(8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)


Event Queue---------------------------------------------


[(8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (9, 'ServerC', 2), (30, 0, -1)]
Event popped-------------------
(8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)
ServerA
<StateClasses.Resource object at 0x7f9b85fb1c90>
Resource acquired--------------
<StateClasses.Resource object at 0x7f9b85fb1c90>
Reimaging now?----------------------
Reimaging--------------------ServerA

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}
{'ServerB': <StateClasses.Resource object at 0x7f9b85fb1e10>}
{'ServerA': <StateClasses.Resource object at 0x7f9b85fb1c90>, 'ServerC': <StateClasses.Resource object at 0x7f9b85fb1dd0>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'COMPR', 'Control': 'ATT', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


/////////////////EMPTY///////////////


[(9, 'ServerC', 2), (12, ('ServerB', {'Status': 'COMPR', 'Control': 'ATT', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (13, 'ServerA', 2), (30, 0, -1)]


Event Queue---------------------------------------------


[(9, 'ServerC', 2), (12, ('ServerB', {'Status': 'COMPR', 'Control': 'ATT', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (13, 'ServerA', 2), (30, 0, -1)]
Event popped-------------------
(9, 'ServerC', 2)
S
None
[<AgentClasses.Attacker object at 0x7fc763a99c10>]
[<AgentClasses.Defender object at 0x7fc763a99d50>]
[<AgentClasses.Attacker object at 0x7fc763a99e50>]
[<AgentClasses.Defender object at 0x7fc763a99f90>]
Simulator successfully created
['ServerA', 'ServerB', 'ServerC']
Testing updateInformation------------------------------


[<AgentClasses.Attacker object at 0x7fc763a99d90>]
[<AgentClasses.Defender object at 0x7fc763a99c10>]
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerA
[(2, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (30, 0, -1)]
[(2, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]


Event Queue---------------------------------------------


[(2, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]
Event popped-------------------
(2, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0)
ServerA
<StateClasses.Resource object at 0x7fc763a99bd0>
Resource acquired--------------
<StateClasses.Resource object at 0x7fc763a99bd0>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerC
[(4, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]
Defender Action exists-------------------
(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(4, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]
Event popped-------------------
(4, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0)
ServerA
<StateClasses.Resource object at 0x7fc763a99bd0>
Resource acquired--------------
<StateClasses.Resource object at 0x7fc763a99bd0>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerC
[(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (6, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 0), (30, 0, -1)]
Defender Action exists-------------------
(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (6, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 0), (30, 0, -1)]
Event popped-------------------
(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)
ServerC
<StateClasses.Resource object at 0x7fc763a99c90>
Resource acquired--------------
<StateClasses.Resource object at 0x7fc763a99c90>
Reimaging now?----------------------
Reimaging--------------------ServerC

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}
{'ServerA': <StateClasses.Resource object at 0x7fc763a99bd0>, 'ServerB': <StateClasses.Resource object at 0x7fc763a99cd0>}
{'ServerC': <StateClasses.Resource object at 0x7fc763a99c90>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerA
[(6, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (9, 'ServerC', 2), (30, 0, -1)]
[(6, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 1), (9, 'ServerC', 2), (30, 0, -1)]


Event Queue---------------------------------------------


[(6, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 1), (9, 'ServerC', 2), (30, 0, -1)]
Event popped-------------------
(6, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0)
ServerB
<StateClasses.Resource object at 0x7fc763a99cd0>
Resource acquired--------------
<StateClasses.Resource object at 0x7fc763a99cd0>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}, 'ServerB': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerB
[(8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 0), (8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 1), (9, 'ServerC', 2), (30, 0, -1)]
Defender Action exists-------------------
(8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 1)


Event Queue---------------------------------------------


[(8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 0), (8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 1), (9, 'ServerC', 2), (30, 0, -1)]
Event popped-------------------
(8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 0)
ServerA
<StateClasses.Resource object at 0x7fc763a99bd0>
Resource acquired--------------
<StateClasses.Resource object at 0x7fc763a99bd0>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 3, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.30000000000000004}, 'ServerB': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerB
[(8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 1), (9, 'ServerC', 2), (10, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 3, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.30000000000000004}), 0), (30, 0, -1)]
Defender Action exists-------------------
(8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 1)


Event Queue---------------------------------------------


[(8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 1), (9, 'ServerC', 2), (10, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 3, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.30000000000000004}), 0), (30, 0, -1)]
Event popped-------------------
(8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 1)
ServerA
<StateClasses.Resource object at 0x7fc763a99bd0>
Resource acquired--------------
<StateClasses.Resource object at 0x7fc763a99bd0>
Reimaging now?----------------------
Reimaging--------------------ServerA

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}
{'ServerB': <StateClasses.Resource object at 0x7fc763a99cd0>}
{'ServerA': <StateClasses.Resource object at 0x7fc763a99bd0>, 'ServerC': <StateClasses.Resource object at 0x7fc763a99c90>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerB
[(9, 'ServerC', 2), (10, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (13, 'ServerA', 2), (30, 0, -1)]
[(9, 'ServerC', 2), (10, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (12, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (13, 'ServerA', 2), (30, 0, -1)]


Event Queue---------------------------------------------


[(9, 'ServerC', 2), (10, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (12, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (13, 'ServerA', 2), (30, 0, -1)]
Event popped-------------------
(9, 'ServerC', 2)
S
None
Resource acquired--------------
<StateClasses.Resource object at 0x7fc763a99c90>
Resource Activated---------------------


{'ServerB': <StateClasses.Resource object at 0x7fc763a99cd0>}
Resource up and running
{'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerB
[(11, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (12, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (13, 'ServerA', 2), (30, 0, -1)]
Defender Action exists-------------------
(12, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)


Event Queue---------------------------------------------


[(11, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (12, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (13, 'ServerA', 2), (30, 0, -1)]
Event popped-------------------
(11, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0)
ServerC
None
Resource acquired--------------
<StateClasses.Resource object at 0x7fc763a99c90>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerC': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}}


Asking for actions------------------------------


Random server is ServerC
[(12, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (13, 'ServerA', 2), (13, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (30, 0, -1)]
Defender Action exists-------------------
(12, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)


Event Queue---------------------------------------------


[(12, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (13, 'ServerA', 2), (13, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (30, 0, -1)]
Event popped-------------------
(12, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)
ServerB
<StateClasses.Resource object at 0x7fc763a99cd0>
Resource acquired--------------
<StateClasses.Resource object at 0x7fc763a99cd0>
Reimaging now?----------------------
Reimaging--------------------ServerB

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}
{}
{'ServerA': <StateClasses.Resource object at 0x7fc763a99bd0>, 'ServerB': <StateClasses.Resource object at 0x7fc763a99cd0>, 'ServerC': <StateClasses.Resource object at 0x7fc763a99c90>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}}


Asking for actions------------------------------


Random server is ServerC
[(13, 'ServerA', 2), (14, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (17, 'ServerB', 2), (30, 0, -1)]
[(13, 'ServerA', 2), (14, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (16, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (17, 'ServerB', 2), (30, 0, -1)]


Event Queue---------------------------------------------


[(13, 'ServerA', 2), (14, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (16, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (17, 'ServerB', 2), (30, 0, -1)]
Event popped-------------------
(13, 'ServerA', 2)
S
None
Resource acquired--------------
<StateClasses.Resource object at 0x7fc763a99bd0>
Resource Activated---------------------


{}
Resource up and running
{'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}}


Asking for actions------------------------------


Random server is ServerA
[(15, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (16, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (17, 'ServerB', 2), (30, 0, -1)]
Defender Action exists-------------------
(16, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)


Event Queue---------------------------------------------


[(15, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (16, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (17, 'ServerB', 2), (30, 0, -1)]
Event popped-------------------
(15, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0)
ServerA
None
Resource acquired--------------
<StateClasses.Resource object at 0x7fc763a99bd0>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}}


Asking for actions------------------------------


Random server is ServerC
[(16, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (17, 'ServerB', 2), (17, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (30, 0, -1)]
Defender Action exists-------------------
(16, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)


Event Queue---------------------------------------------


[(16, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (17, 'ServerB', 2), (17, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (30, 0, -1)]
Event popped-------------------
(16, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)
ServerC
None
Resource acquired--------------
<StateClasses.Resource object at 0x7fc763a99c90>
Reimaging now?----------------------
Reimaging--------------------ServerC

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}
[<AgentClasses.Attacker object at 0x7f88ee1b2c10>]
[<AgentClasses.Defender object at 0x7f88ee1b2d50>]
[<AgentClasses.Attacker object at 0x7f88ee1b2e50>]
[<AgentClasses.Defender object at 0x7f88ee1b2f90>]
Simulator successfully created
['ServerA', 'ServerB', 'ServerC']
Testing updateInformation------------------------------


[<AgentClasses.Attacker object at 0x7f88ee1b2d90>]
[<AgentClasses.Defender object at 0x7f88ee1b2c10>]
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerA
[(2, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (30, 0, -1)]
[(2, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]


Event Queue---------------------------------------------


[(2, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]
Event popped-------------------
(2, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0)
ServerA
<StateClasses.Resource object at 0x7f88ee1b2bd0>
Resource acquired--------------
<StateClasses.Resource object at 0x7f88ee1b2bd0>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerC
[(4, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]
Defender Action exists-------------------
(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(4, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]
Event popped-------------------
(4, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0)
ServerA
<StateClasses.Resource object at 0x7f88ee1b2bd0>
Resource acquired--------------
<StateClasses.Resource object at 0x7f88ee1b2bd0>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerC
[(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (6, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 0), (30, 0, -1)]
Defender Action exists-------------------
(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (6, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 0), (30, 0, -1)]
Event popped-------------------
(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)
ServerC
<StateClasses.Resource object at 0x7f88ee1b2c90>
Resource acquired--------------
<StateClasses.Resource object at 0x7f88ee1b2c90>
Reimaging now?----------------------
Reimaging--------------------ServerC

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}
{'ServerA': <StateClasses.Resource object at 0x7f88ee1b2bd0>, 'ServerB': <StateClasses.Resource object at 0x7f88ee1b2cd0>}
{'ServerC': <StateClasses.Resource object at 0x7f88ee1b2c90>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerA
[(6, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (9, 'ServerC', 2), (30, 0, -1)]
[(6, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 1), (9, 'ServerC', 2), (30, 0, -1)]


Event Queue---------------------------------------------


[(6, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 1), (9, 'ServerC', 2), (30, 0, -1)]
Event popped-------------------
(6, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0)
ServerB
<StateClasses.Resource object at 0x7f88ee1b2cd0>
Resource acquired--------------
<StateClasses.Resource object at 0x7f88ee1b2cd0>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}, 'ServerB': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerB
[(8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 0), (8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 1), (9, 'ServerC', 2), (30, 0, -1)]
Defender Action exists-------------------
(8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 1)


Event Queue---------------------------------------------


[(8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 0), (8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 1), (9, 'ServerC', 2), (30, 0, -1)]
Event popped-------------------
(8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 0)
ServerA
<StateClasses.Resource object at 0x7f88ee1b2bd0>
Resource acquired--------------
<StateClasses.Resource object at 0x7f88ee1b2bd0>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'COMPR', 'Control': 'ATT', 'Name': 'ServerA', 'Probes till now': 3, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.30000000000000004}, 'ServerB': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerB
[(8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 1), (9, 'ServerC', 2), (10, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (30, 0, -1)]
Defender Action exists-------------------
(8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 1)


Event Queue---------------------------------------------


[(8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 1), (9, 'ServerC', 2), (10, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (30, 0, -1)]
Event popped-------------------
(8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 1)
ServerA
<StateClasses.Resource object at 0x7f88ee1b2bd0>
Resource acquired--------------
<StateClasses.Resource object at 0x7f88ee1b2bd0>
Reimaging now?----------------------
Reimaging--------------------ServerA

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}
{'ServerB': <StateClasses.Resource object at 0x7f88ee1b2cd0>}
{'ServerA': <StateClasses.Resource object at 0x7f88ee1b2bd0>, 'ServerC': <StateClasses.Resource object at 0x7f88ee1b2c90>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerB
[(9, 'ServerC', 2), (10, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (13, 'ServerA', 2), (30, 0, -1)]
[(9, 'ServerC', 2), (10, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (12, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (13, 'ServerA', 2), (30, 0, -1)]


Event Queue---------------------------------------------


[(9, 'ServerC', 2), (10, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (12, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (13, 'ServerA', 2), (30, 0, -1)]
Event popped-------------------
(9, 'ServerC', 2)
S
None
Resource acquired--------------
<StateClasses.Resource object at 0x7f88ee1b2c90>
Resource Activated---------------------


{'ServerB': <StateClasses.Resource object at 0x7f88ee1b2cd0>, 'ServerC': <StateClasses.Resource object at 0x7f88ee1b2c90>}
Resource up and running
{'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerC
[(11, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (12, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (13, 'ServerA', 2), (30, 0, -1)]
Defender Action exists-------------------
(12, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)


Event Queue---------------------------------------------


[(11, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (12, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (13, 'ServerA', 2), (30, 0, -1)]
Event popped-------------------
(11, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0)
ServerB
<StateClasses.Resource object at 0x7f88ee1b2cd0>
Resource acquired--------------
<StateClasses.Resource object at 0x7f88ee1b2cd0>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'COMPR', 'Control': 'ATT', 'Name': 'ServerB', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerC
[(12, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (13, 'ServerA', 2), (13, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (30, 0, -1)]
Defender Action exists-------------------
(12, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)


Event Queue---------------------------------------------


[(12, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (13, 'ServerA', 2), (13, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (30, 0, -1)]
Event popped-------------------
(12, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)
ServerB
<StateClasses.Resource object at 0x7f88ee1b2cd0>
Resource acquired--------------
<StateClasses.Resource object at 0x7f88ee1b2cd0>
Reimaging now?----------------------
Reimaging--------------------ServerB

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}
{'ServerC': <StateClasses.Resource object at 0x7f88ee1b2c90>}
{'ServerA': <StateClasses.Resource object at 0x7f88ee1b2bd0>, 'ServerB': <StateClasses.Resource object at 0x7f88ee1b2cd0>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerC
[(13, 'ServerA', 2), (14, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (17, 'ServerB', 2), (30, 0, -1)]
[(13, 'ServerA', 2), (14, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (16, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (17, 'ServerB', 2), (30, 0, -1)]


Event Queue---------------------------------------------


[(13, 'ServerA', 2), (14, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (16, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (17, 'ServerB', 2), (30, 0, -1)]
Event popped-------------------
(13, 'ServerA', 2)
S
None
Resource acquired--------------
<StateClasses.Resource object at 0x7f88ee1b2bd0>
Resource Activated---------------------


{'ServerA': <StateClasses.Resource object at 0x7f88ee1b2bd0>, 'ServerC': <StateClasses.Resource object at 0x7f88ee1b2c90>}
Resource up and running
{'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerC
[(15, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (16, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (17, 'ServerB', 2), (30, 0, -1)]
Defender Action exists-------------------
(16, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(15, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (16, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (17, 'ServerB', 2), (30, 0, -1)]
Event popped-------------------
(15, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0)
ServerC
<StateClasses.Resource object at 0x7f88ee1b2c90>
Resource acquired--------------
<StateClasses.Resource object at 0x7f88ee1b2c90>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}}


Asking for actions------------------------------


Random server is ServerC
[(16, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (17, 'ServerB', 2), (17, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (30, 0, -1)]
Defender Action exists-------------------
(16, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(16, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (17, 'ServerB', 2), (17, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (30, 0, -1)]
Event popped-------------------
(16, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)
ServerC
<StateClasses.Resource object at 0x7f88ee1b2c90>
Resource acquired--------------
<StateClasses.Resource object at 0x7f88ee1b2c90>
Reimaging now?----------------------
Reimaging--------------------ServerC

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}
{'ServerA': <StateClasses.Resource object at 0x7f88ee1b2bd0>}
{'ServerB': <StateClasses.Resource object at 0x7f88ee1b2cd0>, 'ServerC': <StateClasses.Resource object at 0x7f88ee1b2c90>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerA
[(17, 'ServerB', 2), (18, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (21, 'ServerC', 2), (30, 0, -1)]
[(17, 'ServerB', 2), (18, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (20, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (21, 'ServerC', 2), (30, 0, -1)]


Event Queue---------------------------------------------


[(17, 'ServerB', 2), (18, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (20, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (21, 'ServerC', 2), (30, 0, -1)]
Event popped-------------------
(17, 'ServerB', 2)
S
None
Resource acquired--------------
<StateClasses.Resource object at 0x7f88ee1b2cd0>
Resource Activated---------------------


{'ServerA': <StateClasses.Resource object at 0x7f88ee1b2bd0>, 'ServerB': <StateClasses.Resource object at 0x7f88ee1b2cd0>}
Resource up and running
{'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerA
[(19, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (20, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (21, 'ServerC', 2), (30, 0, -1)]
Defender Action exists-------------------
(20, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(19, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (20, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (21, 'ServerC', 2), (30, 0, -1)]
Event popped-------------------
(19, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0)
ServerA
<StateClasses.Resource object at 0x7f88ee1b2bd0>
Resource acquired--------------
<StateClasses.Resource object at 0x7f88ee1b2bd0>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerA
[(20, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (21, 'ServerC', 2), (21, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (30, 0, -1)]
Defender Action exists-------------------
(20, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(20, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (21, 'ServerC', 2), (21, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (30, 0, -1)]
Event popped-------------------
(20, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)
ServerA
<StateClasses.Resource object at 0x7f88ee1b2bd0>
Resource acquired--------------
<StateClasses.Resource object at 0x7f88ee1b2bd0>
Reimaging now?----------------------
Reimaging--------------------ServerA

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}
{'ServerB': <StateClasses.Resource object at 0x7f88ee1b2cd0>}
{'ServerA': <StateClasses.Resource object at 0x7f88ee1b2bd0>, 'ServerC': <StateClasses.Resource object at 0x7f88ee1b2c90>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerB
[(21, 'ServerC', 2), (22, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (25, 'ServerA', 2), (30, 0, -1)]
[(21, 'ServerC', 2), (22, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (24, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (25, 'ServerA', 2), (30, 0, -1)]


Event Queue---------------------------------------------


[(21, 'ServerC', 2), (22, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (24, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (25, 'ServerA', 2), (30, 0, -1)]
Event popped-------------------
(21, 'ServerC', 2)
S
None
Resource acquired--------------
<StateClasses.Resource object at 0x7f88ee1b2c90>
Resource Activated---------------------


{'ServerB': <StateClasses.Resource object at 0x7f88ee1b2cd0>, 'ServerC': <StateClasses.Resource object at 0x7f88ee1b2c90>}
Resource up and running
{'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerC
[(23, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (24, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (25, 'ServerA', 2), (30, 0, -1)]
Defender Action exists-------------------
(24, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(23, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (24, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (25, 'ServerA', 2), (30, 0, -1)]
Event popped-------------------
(23, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0)
ServerC
<StateClasses.Resource object at 0x7f88ee1b2c90>
Resource acquired--------------
<StateClasses.Resource object at 0x7f88ee1b2c90>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}}


Asking for actions------------------------------


Random server is ServerB
[(24, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (25, 'ServerA', 2), (25, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (30, 0, -1)]
Defender Action exists-------------------
(24, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(24, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (25, 'ServerA', 2), (25, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (30, 0, -1)]
Event popped-------------------
(24, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)
ServerB
<StateClasses.Resource object at 0x7f88ee1b2cd0>
Resource acquired--------------
<StateClasses.Resource object at 0x7f88ee1b2cd0>
Reimaging now?----------------------
Reimaging--------------------ServerB

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}
{'ServerC': <StateClasses.Resource object at 0x7f88ee1b2c90>}
{'ServerA': <StateClasses.Resource object at 0x7f88ee1b2bd0>, 'ServerB': <StateClasses.Resource object at 0x7f88ee1b2cd0>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}}


Asking for actions------------------------------


Random server is ServerC
[(25, 'ServerA', 2), (26, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (29, 'ServerB', 2), (30, 0, -1)]
[(25, 'ServerA', 2), (26, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (28, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (29, 'ServerB', 2), (30, 0, -1)]


Event Queue---------------------------------------------


[(25, 'ServerA', 2), (26, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (28, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (29, 'ServerB', 2), (30, 0, -1)]
Event popped-------------------
(25, 'ServerA', 2)
S
None
Resource acquired--------------
<StateClasses.Resource object at 0x7f88ee1b2bd0>
Resource Activated---------------------


{'ServerA': <StateClasses.Resource object at 0x7f88ee1b2bd0>, 'ServerC': <StateClasses.Resource object at 0x7f88ee1b2c90>}
Resource up and running
{'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}}


Asking for actions------------------------------


Random server is ServerC
[(27, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (28, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (29, 'ServerB', 2), (30, 0, -1)]
Defender Action exists-------------------
(28, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)


Event Queue---------------------------------------------


[(27, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (28, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (29, 'ServerB', 2), (30, 0, -1)]
Event popped-------------------
(27, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0)
ServerC
<StateClasses.Resource object at 0x7f88ee1b2c90>
Resource acquired--------------
<StateClasses.Resource object at 0x7f88ee1b2c90>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 2, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.2}}


Asking for actions------------------------------


Random server is ServerA
[(28, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (29, 'ServerB', 2), (29, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (30, 0, -1)]
Defender Action exists-------------------
(28, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)


Event Queue---------------------------------------------


[(28, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (29, 'ServerB', 2), (29, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (30, 0, -1)]
Event popped-------------------
(28, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)
ServerC
<StateClasses.Resource object at 0x7f88ee1b2c90>
Resource acquired--------------
<StateClasses.Resource object at 0x7f88ee1b2c90>
Reimaging now?----------------------
Reimaging--------------------ServerC

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 3, 'Total Downtime': 0, 'Probability of Compromise': 0}
{'ServerA': <StateClasses.Resource object at 0x7f88ee1b2bd0>}
{'ServerB': <StateClasses.Resource object at 0x7f88ee1b2cd0>, 'ServerC': <StateClasses.Resource object at 0x7f88ee1b2c90>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 3, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerA
[(29, 'ServerB', 2), (30, 0, -1), (30, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (33, 'ServerC', 2)]
[(29, 'ServerB', 2), (30, 0, -1), (30, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (32, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (33, 'ServerC', 2)]


Event Queue---------------------------------------------


[(29, 'ServerB', 2), (30, 0, -1), (30, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (32, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (33, 'ServerC', 2)]
Event popped-------------------
(29, 'ServerB', 2)
S
None
Resource acquired--------------
<StateClasses.Resource object at 0x7f88ee1b2cd0>
Resource Activated---------------------


{'ServerA': <StateClasses.Resource object at 0x7f88ee1b2bd0>, 'ServerB': <StateClasses.Resource object at 0x7f88ee1b2cd0>}
Resource up and running
{'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 3, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerB
[(30, 0, -1), (31, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (32, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (33, 'ServerC', 2)]
Defender Action exists-------------------
(32, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(30, 0, -1), (31, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (32, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (33, 'ServerC', 2)]
Event popped-------------------
(30, 0, -1)
[<AgentClasses.Attacker object at 0x7ffb152eec50>]
[<AgentClasses.Defender object at 0x7ffb152eed90>]
[<AgentClasses.Attacker object at 0x7ffb152eee90>]
[<AgentClasses.Defender object at 0x7ffb152eefd0>]
Simulator successfully created
['ServerA', 'ServerB', 'ServerC']
Testing updateInformation------------------------------


[<AgentClasses.Attacker object at 0x7ffb152eedd0>]
[<AgentClasses.Defender object at 0x7ffb152eec50>]
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerC
[(2, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (30, 0, -1)]
[(2, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]


Event Queue---------------------------------------------


[(2, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]
Event popped-------------------
(2, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0)
<StateClasses.Resource object at 0x7ffb152eecd0>
Resource acquired--------------
<StateClasses.Resource object at 0x7ffb152eecd0>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}}


Asking for actions------------------------------


Random server is ServerA
[(4, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]
Defender Action exists-------------------
(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(4, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]
Event popped-------------------
(4, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0)
<StateClasses.Resource object at 0x7ffb152eec10>
Resource acquired--------------
<StateClasses.Resource object at 0x7ffb152eec10>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}}


Asking for actions------------------------------


Random server is ServerB
[(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (6, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (30, 0, -1)]
Defender Action exists-------------------
(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (6, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (30, 0, -1)]
Event popped-------------------
(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)
<StateClasses.Resource object at 0x7ffb152eecd0>
Resource acquired--------------
<StateClasses.Resource object at 0x7ffb152eecd0>
Reimaging now?----------------------
Reimaging--------------------ServerC

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}
{'ServerA': <StateClasses.Resource object at 0x7ffb152eec10>, 'ServerB': <StateClasses.Resource object at 0x7ffb152eed10>}
{'ServerC': <StateClasses.Resource object at 0x7ffb152eecd0>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerB
[(6, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (9, 'ServerC', 2), (30, 0, -1)]
[(6, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (9, 'ServerC', 2), (30, 0, -1)]


Event Queue---------------------------------------------


[(6, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (9, 'ServerC', 2), (30, 0, -1)]
Event popped-------------------
(6, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0)
<StateClasses.Resource object at 0x7ffb152eec10>
Resource acquired--------------
<StateClasses.Resource object at 0x7ffb152eec10>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerA
[(8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (8, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (9, 'ServerC', 2), (30, 0, -1)]
Defender Action exists-------------------
(8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)


Event Queue---------------------------------------------


[(8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (8, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (9, 'ServerC', 2), (30, 0, -1)]
Event popped-------------------
(8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)
<StateClasses.Resource object at 0x7ffb152eec10>
Resource acquired--------------
<StateClasses.Resource object at 0x7ffb152eec10>
Reimaging now?----------------------
Reimaging--------------------ServerA

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}
{'ServerB': <StateClasses.Resource object at 0x7ffb152eed10>}
{'ServerA': <StateClasses.Resource object at 0x7ffb152eec10>, 'ServerC': <StateClasses.Resource object at 0x7ffb152eecd0>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerB
[(9, 'ServerC', 2), (10, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (13, 'ServerA', 2), (30, 0, -1)]
[(9, 'ServerC', 2), (10, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (12, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (13, 'ServerA', 2), (30, 0, -1)]


Event Queue---------------------------------------------


[(9, 'ServerC', 2), (10, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (12, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (13, 'ServerA', 2), (30, 0, -1)]
Event popped-------------------
(9, 'ServerC', 2)
None
Resource acquired--------------
<StateClasses.Resource object at 0x7ffb152eecd0>
Resource Activated---------------------


{'ServerB': <StateClasses.Resource object at 0x7ffb152eed10>, 'ServerC': <StateClasses.Resource object at 0x7ffb152eecd0>}
Resource up and running
{'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerB
[(11, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (12, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (13, 'ServerA', 2), (30, 0, -1)]
Defender Action exists-------------------
(12, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(11, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (12, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (13, 'ServerA', 2), (30, 0, -1)]
Event popped-------------------
(11, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0)
<StateClasses.Resource object at 0x7ffb152eed10>
Resource acquired--------------
<StateClasses.Resource object at 0x7ffb152eed10>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerB
[(12, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (13, 'ServerA', 2), (13, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (30, 0, -1)]
Defender Action exists-------------------
(12, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(12, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (13, 'ServerA', 2), (13, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (30, 0, -1)]
Event popped-------------------
(12, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)
<StateClasses.Resource object at 0x7ffb152eed10>
Resource acquired--------------
<StateClasses.Resource object at 0x7ffb152eed10>
Reimaging now?----------------------
Reimaging--------------------ServerB

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}
{'ServerC': <StateClasses.Resource object at 0x7ffb152eecd0>}
{'ServerA': <StateClasses.Resource object at 0x7ffb152eec10>, 'ServerB': <StateClasses.Resource object at 0x7ffb152eed10>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerC
[(13, 'ServerA', 2), (14, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (17, 'ServerB', 2), (30, 0, -1)]
[(13, 'ServerA', 2), (14, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (16, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (17, 'ServerB', 2), (30, 0, -1)]


Event Queue---------------------------------------------


[(13, 'ServerA', 2), (14, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (16, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (17, 'ServerB', 2), (30, 0, -1)]
Event popped-------------------
(13, 'ServerA', 2)
None
Resource acquired--------------
<StateClasses.Resource object at 0x7ffb152eec10>
Resource Activated---------------------


{'ServerA': <StateClasses.Resource object at 0x7ffb152eec10>, 'ServerC': <StateClasses.Resource object at 0x7ffb152eecd0>}
Resource up and running
{'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerC
[(15, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (16, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (17, 'ServerB', 2), (30, 0, -1)]
Defender Action exists-------------------
(16, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(15, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (16, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (17, 'ServerB', 2), (30, 0, -1)]
Event popped-------------------
(15, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0)
<StateClasses.Resource object at 0x7ffb152eecd0>
Resource acquired--------------
<StateClasses.Resource object at 0x7ffb152eecd0>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}}


Asking for actions------------------------------


Random server is ServerA
[(16, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (17, 'ServerB', 2), (17, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (30, 0, -1)]
Defender Action exists-------------------
(16, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(16, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (17, 'ServerB', 2), (17, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (30, 0, -1)]
Event popped-------------------
(16, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)
<StateClasses.Resource object at 0x7ffb152eecd0>
Resource acquired--------------
<StateClasses.Resource object at 0x7ffb152eecd0>
Reimaging now?----------------------
Reimaging--------------------ServerC

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}
{'ServerA': <StateClasses.Resource object at 0x7ffb152eec10>}
{'ServerB': <StateClasses.Resource object at 0x7ffb152eed10>, 'ServerC': <StateClasses.Resource object at 0x7ffb152eecd0>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerA
[(17, 'ServerB', 2), (18, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (21, 'ServerC', 2), (30, 0, -1)]
[(17, 'ServerB', 2), (18, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (20, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (21, 'ServerC', 2), (30, 0, -1)]


Event Queue---------------------------------------------


[(17, 'ServerB', 2), (18, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (20, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (21, 'ServerC', 2), (30, 0, -1)]
Event popped-------------------
(17, 'ServerB', 2)
None
Resource acquired--------------
<StateClasses.Resource object at 0x7ffb152eed10>
Resource Activated---------------------


{'ServerA': <StateClasses.Resource object at 0x7ffb152eec10>, 'ServerB': <StateClasses.Resource object at 0x7ffb152eed10>}
Resource up and running
{'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerB
[(19, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (20, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (21, 'ServerC', 2), (30, 0, -1)]
Defender Action exists-------------------
(20, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(19, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (20, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (21, 'ServerC', 2), (30, 0, -1)]
Event popped-------------------
(19, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0)
<StateClasses.Resource object at 0x7ffb152eed10>
Resource acquired--------------
<StateClasses.Resource object at 0x7ffb152eed10>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerB
[(20, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (21, 'ServerC', 2), (21, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (30, 0, -1)]
Defender Action exists-------------------
(20, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(20, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (21, 'ServerC', 2), (21, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (30, 0, -1)]
Event popped-------------------
(20, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)
<StateClasses.Resource object at 0x7ffb152eec10>
Resource acquired--------------
<StateClasses.Resource object at 0x7ffb152eec10>
Reimaging now?----------------------
Reimaging--------------------ServerA

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}
{'ServerB': <StateClasses.Resource object at 0x7ffb152eed10>}
{'ServerA': <StateClasses.Resource object at 0x7ffb152eec10>, 'ServerC': <StateClasses.Resource object at 0x7ffb152eecd0>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerB
[(21, 'ServerC', 2), (22, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (25, 'ServerA', 2), (30, 0, -1)]
[(21, 'ServerC', 2), (22, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (24, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (25, 'ServerA', 2), (30, 0, -1)]


Event Queue---------------------------------------------


[(21, 'ServerC', 2), (22, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (24, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (25, 'ServerA', 2), (30, 0, -1)]
Event popped-------------------
(21, 'ServerC', 2)
None
Resource acquired--------------
<StateClasses.Resource object at 0x7ffb152eecd0>
Resource Activated---------------------


{'ServerB': <StateClasses.Resource object at 0x7ffb152eed10>, 'ServerC': <StateClasses.Resource object at 0x7ffb152eecd0>}
Resource up and running
{'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerC
[(23, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (24, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (25, 'ServerA', 2), (30, 0, -1)]
Defender Action exists-------------------
(24, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)


Event Queue---------------------------------------------


[(23, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (24, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (25, 'ServerA', 2), (30, 0, -1)]
Event popped-------------------
(23, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0)
<StateClasses.Resource object at 0x7ffb152eed10>
Resource acquired--------------
<StateClasses.Resource object at 0x7ffb152eed10>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 2, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.2}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerB
[(24, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (25, 'ServerA', 2), (25, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (30, 0, -1)]
Defender Action exists-------------------
(24, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)


Event Queue---------------------------------------------


[(24, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (25, 'ServerA', 2), (25, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (30, 0, -1)]
Event popped-------------------
(24, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)
<StateClasses.Resource object at 0x7ffb152eed10>
Resource acquired--------------
<StateClasses.Resource object at 0x7ffb152eed10>
Reimaging now?----------------------
Reimaging--------------------ServerB

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}
{'ServerC': <StateClasses.Resource object at 0x7ffb152eecd0>}
{'ServerA': <StateClasses.Resource object at 0x7ffb152eec10>, 'ServerB': <StateClasses.Resource object at 0x7ffb152eed10>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerC
[(25, 'ServerA', 2), (26, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (29, 'ServerB', 2), (30, 0, -1)]
[(25, 'ServerA', 2), (26, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (28, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (29, 'ServerB', 2), (30, 0, -1)]


Event Queue---------------------------------------------


[(25, 'ServerA', 2), (26, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (28, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (29, 'ServerB', 2), (30, 0, -1)]
Event popped-------------------
(25, 'ServerA', 2)
None
Resource acquired--------------
<StateClasses.Resource object at 0x7ffb152eec10>
Resource Activated---------------------


{'ServerA': <StateClasses.Resource object at 0x7ffb152eec10>, 'ServerC': <StateClasses.Resource object at 0x7ffb152eecd0>}
Resource up and running
{'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerA
[(27, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (28, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (29, 'ServerB', 2), (30, 0, -1)]
Defender Action exists-------------------
(28, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(27, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (28, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (29, 'ServerB', 2), (30, 0, -1)]
Event popped-------------------
(27, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0)
<StateClasses.Resource object at 0x7ffb152eec10>
Resource acquired--------------
<StateClasses.Resource object at 0x7ffb152eec10>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerA
[(28, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (29, 'ServerB', 2), (29, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (30, 0, -1)]
Defender Action exists-------------------
(28, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(28, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (29, 'ServerB', 2), (29, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (30, 0, -1)]
Event popped-------------------
(28, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)
<StateClasses.Resource object at 0x7ffb152eecd0>
Resource acquired--------------
<StateClasses.Resource object at 0x7ffb152eecd0>
Reimaging now?----------------------
Reimaging--------------------ServerC

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 3, 'Total Downtime': 0, 'Probability of Compromise': 0}
{'ServerA': <StateClasses.Resource object at 0x7ffb152eec10>}
{'ServerB': <StateClasses.Resource object at 0x7ffb152eed10>, 'ServerC': <StateClasses.Resource object at 0x7ffb152eecd0>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 3, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerA
[(29, 'ServerB', 2), (30, 0, -1), (30, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (33, 'ServerC', 2)]
[(29, 'ServerB', 2), (30, 0, -1), (30, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (32, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (33, 'ServerC', 2)]


Event Queue---------------------------------------------


[(29, 'ServerB', 2), (30, 0, -1), (30, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (32, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (33, 'ServerC', 2)]
Event popped-------------------
(29, 'ServerB', 2)
None
Resource acquired--------------
<StateClasses.Resource object at 0x7ffb152eed10>
Resource Activated---------------------


{'ServerA': <StateClasses.Resource object at 0x7ffb152eec10>, 'ServerB': <StateClasses.Resource object at 0x7ffb152eed10>}
Resource up and running
{'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 3, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerB
[(30, 0, -1), (31, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (32, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (33, 'ServerC', 2)]
Defender Action exists-------------------
(32, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)


Event Queue---------------------------------------------


[(30, 0, -1), (31, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (32, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (33, 'ServerC', 2)]
Event popped-------------------
(30, 0, -1)
[<AgentClasses.Attacker object at 0x7f9ef95f4c50>]
[<AgentClasses.Defender object at 0x7f9ef95f4d90>]
[<AgentClasses.Attacker object at 0x7f9ef95f4e90>]
[<AgentClasses.Defender object at 0x7f9ef95f4fd0>]
Simulator successfully created
['ServerA', 'ServerB', 'ServerC']
Testing updateInformation------------------------------


[<AgentClasses.Attacker object at 0x7f9ef95f4dd0>]
[<AgentClasses.Defender object at 0x7f9ef95f4c50>]
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerC
[(2, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (30, 0, -1)]
[(2, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]


Event Queue---------------------------------------------


[(2, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]
Event popped-------------------
(2, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0)
<StateClasses.Resource object at 0x7f9ef95f4cd0>
Resource acquired--------------
<StateClasses.Resource object at 0x7f9ef95f4cd0>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}}


Asking for actions------------------------------


Random server is ServerA
[(4, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]
Defender Action exists-------------------
(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(4, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]
Event popped-------------------
(4, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0)
<StateClasses.Resource object at 0x7f9ef95f4c10>
Resource acquired--------------
<StateClasses.Resource object at 0x7f9ef95f4c10>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}}


Asking for actions------------------------------


Random server is ServerB
[(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (6, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (30, 0, -1)]
Defender Action exists-------------------
(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (6, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (30, 0, -1)]
Event popped-------------------
(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)
<StateClasses.Resource object at 0x7f9ef95f4cd0>
Resource acquired--------------
<StateClasses.Resource object at 0x7f9ef95f4cd0>
Reimaging now?----------------------
Reimaging--------------------ServerC

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}
{'ServerA': <StateClasses.Resource object at 0x7f9ef95f4c10>, 'ServerB': <StateClasses.Resource object at 0x7f9ef95f4d10>}
{'ServerC': <StateClasses.Resource object at 0x7f9ef95f4cd0>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerB
[(6, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (9, 'ServerC', 2), (30, 0, -1)]
[(6, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (9, 'ServerC', 2), (30, 0, -1)]


Event Queue---------------------------------------------


[(6, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (9, 'ServerC', 2), (30, 0, -1)]
Event popped-------------------
(6, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0)
<StateClasses.Resource object at 0x7f9ef95f4c10>
Resource acquired--------------
<StateClasses.Resource object at 0x7f9ef95f4c10>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerA
[(8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (8, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (9, 'ServerC', 2), (30, 0, -1)]
Defender Action exists-------------------
(8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)


Event Queue---------------------------------------------


[(8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (8, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (9, 'ServerC', 2), (30, 0, -1)]
Event popped-------------------
(8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)
<StateClasses.Resource object at 0x7f9ef95f4c10>
Resource acquired--------------
<StateClasses.Resource object at 0x7f9ef95f4c10>
Reimaging now?----------------------
Reimaging--------------------ServerA

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}
{'ServerB': <StateClasses.Resource object at 0x7f9ef95f4d10>}
{'ServerA': <StateClasses.Resource object at 0x7f9ef95f4c10>, 'ServerC': <StateClasses.Resource object at 0x7f9ef95f4cd0>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerB
[(9, 'ServerC', 2), (10, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (13, 'ServerA', 2), (30, 0, -1)]
[(9, 'ServerC', 2), (10, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (12, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (13, 'ServerA', 2), (30, 0, -1)]


Event Queue---------------------------------------------


[(9, 'ServerC', 2), (10, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (12, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (13, 'ServerA', 2), (30, 0, -1)]
Event popped-------------------
(9, 'ServerC', 2)
None
Resource acquired--------------
<StateClasses.Resource object at 0x7f9ef95f4cd0>
Resource Activated---------------------


{'ServerB': <StateClasses.Resource object at 0x7f9ef95f4d10>, 'ServerC': <StateClasses.Resource object at 0x7f9ef95f4cd0>}
Resource up and running
{'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerC
[(11, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (12, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (13, 'ServerA', 2), (30, 0, -1)]
Defender Action exists-------------------
(12, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(11, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (12, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (13, 'ServerA', 2), (30, 0, -1)]
Event popped-------------------
(11, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0)
<StateClasses.Resource object at 0x7f9ef95f4cd0>
Resource acquired--------------
<StateClasses.Resource object at 0x7f9ef95f4cd0>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}}


Asking for actions------------------------------


Random server is ServerC
[(12, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (13, 'ServerA', 2), (13, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (30, 0, -1)]
Defender Action exists-------------------
(12, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(12, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (13, 'ServerA', 2), (13, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (30, 0, -1)]
Event popped-------------------
(12, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)
<StateClasses.Resource object at 0x7f9ef95f4d10>
Resource acquired--------------
<StateClasses.Resource object at 0x7f9ef95f4d10>
Reimaging now?----------------------
Reimaging--------------------ServerB

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}
{'ServerC': <StateClasses.Resource object at 0x7f9ef95f4cd0>}
{'ServerA': <StateClasses.Resource object at 0x7f9ef95f4c10>, 'ServerB': <StateClasses.Resource object at 0x7f9ef95f4d10>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}}


Asking for actions------------------------------


Random server is ServerC
[(13, 'ServerA', 2), (14, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (17, 'ServerB', 2), (30, 0, -1)]
[(13, 'ServerA', 2), (14, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (16, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (17, 'ServerB', 2), (30, 0, -1)]


Event Queue---------------------------------------------


[(13, 'ServerA', 2), (14, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (16, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (17, 'ServerB', 2), (30, 0, -1)]
Event popped-------------------
(13, 'ServerA', 2)
None
Resource acquired--------------
<StateClasses.Resource object at 0x7f9ef95f4c10>
Resource Activated---------------------


{'ServerA': <StateClasses.Resource object at 0x7f9ef95f4c10>, 'ServerC': <StateClasses.Resource object at 0x7f9ef95f4cd0>}
Resource up and running
{'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}}


Asking for actions------------------------------


Random server is ServerA
[(15, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (16, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (17, 'ServerB', 2), (30, 0, -1)]
Defender Action exists-------------------
(16, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)


Event Queue---------------------------------------------


[(15, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (16, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (17, 'ServerB', 2), (30, 0, -1)]
Event popped-------------------
(15, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0)
<StateClasses.Resource object at 0x7f9ef95f4c10>
Resource acquired--------------
<StateClasses.Resource object at 0x7f9ef95f4c10>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}}


Asking for actions------------------------------


Random server is ServerC
[(16, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (17, 'ServerB', 2), (17, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (30, 0, -1)]
Defender Action exists-------------------
(16, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)


Event Queue---------------------------------------------


[(16, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (17, 'ServerB', 2), (17, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (30, 0, -1)]
Event popped-------------------
(16, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)
<StateClasses.Resource object at 0x7f9ef95f4cd0>
Resource acquired--------------
<StateClasses.Resource object at 0x7f9ef95f4cd0>
Reimaging now?----------------------
Reimaging--------------------ServerC

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}
{'ServerA': <StateClasses.Resource object at 0x7f9ef95f4c10>}
{'ServerB': <StateClasses.Resource object at 0x7f9ef95f4d10>, 'ServerC': <StateClasses.Resource object at 0x7f9ef95f4cd0>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerA
[(17, 'ServerB', 2), (18, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (21, 'ServerC', 2), (30, 0, -1)]
[(17, 'ServerB', 2), (18, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (20, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (21, 'ServerC', 2), (30, 0, -1)]


Event Queue---------------------------------------------


[(17, 'ServerB', 2), (18, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (20, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (21, 'ServerC', 2), (30, 0, -1)]
Event popped-------------------
(17, 'ServerB', 2)
None
Resource acquired--------------
<StateClasses.Resource object at 0x7f9ef95f4d10>
Resource Activated---------------------


{'ServerA': <StateClasses.Resource object at 0x7f9ef95f4c10>, 'ServerB': <StateClasses.Resource object at 0x7f9ef95f4d10>}
Resource up and running
{'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerA
[(19, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (20, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (21, 'ServerC', 2), (30, 0, -1)]
Defender Action exists-------------------
(20, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)


Event Queue---------------------------------------------


[(19, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (20, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (21, 'ServerC', 2), (30, 0, -1)]
Event popped-------------------
(19, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0)
<StateClasses.Resource object at 0x7f9ef95f4d10>
Resource acquired--------------
<StateClasses.Resource object at 0x7f9ef95f4d10>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerB': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerA
[(20, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (21, 'ServerC', 2), (21, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (30, 0, -1)]
Defender Action exists-------------------
(20, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)


Event Queue---------------------------------------------


[(20, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (21, 'ServerC', 2), (21, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (30, 0, -1)]
Event popped-------------------
(20, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)
<StateClasses.Resource object at 0x7f9ef95f4c10>
Resource acquired--------------
<StateClasses.Resource object at 0x7f9ef95f4c10>
Reimaging now?----------------------
Reimaging--------------------ServerA

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}
{'ServerB': <StateClasses.Resource object at 0x7f9ef95f4d10>}
{'ServerA': <StateClasses.Resource object at 0x7f9ef95f4c10>, 'ServerC': <StateClasses.Resource object at 0x7f9ef95f4cd0>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerB
[(21, 'ServerC', 2), (22, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (25, 'ServerA', 2), (30, 0, -1)]
[(21, 'ServerC', 2), (22, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (24, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (25, 'ServerA', 2), (30, 0, -1)]


Event Queue---------------------------------------------


[(21, 'ServerC', 2), (22, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (24, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (25, 'ServerA', 2), (30, 0, -1)]
Event popped-------------------
(21, 'ServerC', 2)
None
Resource acquired--------------
<StateClasses.Resource object at 0x7f9ef95f4cd0>
Resource Activated---------------------


{'ServerB': <StateClasses.Resource object at 0x7f9ef95f4d10>, 'ServerC': <StateClasses.Resource object at 0x7f9ef95f4cd0>}
Resource up and running
{'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerB
[(23, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (24, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (25, 'ServerA', 2), (30, 0, -1)]
Defender Action exists-------------------
(24, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)


Event Queue---------------------------------------------


[(23, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (24, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (25, 'ServerA', 2), (30, 0, -1)]
Event popped-------------------
(23, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0)
<StateClasses.Resource object at 0x7f9ef95f4cd0>
Resource acquired--------------
<StateClasses.Resource object at 0x7f9ef95f4cd0>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerC': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}}


Asking for actions------------------------------


Random server is ServerB
[(24, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (25, 'ServerA', 2), (25, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (30, 0, -1)]
Defender Action exists-------------------
(24, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)


Event Queue---------------------------------------------


[(24, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (25, 'ServerA', 2), (25, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (30, 0, -1)]
Event popped-------------------
(24, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)
<StateClasses.Resource object at 0x7f9ef95f4d10>
Resource acquired--------------
<StateClasses.Resource object at 0x7f9ef95f4d10>
Reimaging now?----------------------
Reimaging--------------------ServerB

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}
{'ServerC': <StateClasses.Resource object at 0x7f9ef95f4cd0>}
{'ServerA': <StateClasses.Resource object at 0x7f9ef95f4c10>, 'ServerB': <StateClasses.Resource object at 0x7f9ef95f4d10>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}}


Asking for actions------------------------------


Random server is ServerC
[(25, 'ServerA', 2), (26, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (29, 'ServerB', 2), (30, 0, -1)]
[(25, 'ServerA', 2), (26, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (28, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (29, 'ServerB', 2), (30, 0, -1)]


Event Queue---------------------------------------------


[(25, 'ServerA', 2), (26, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (28, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (29, 'ServerB', 2), (30, 0, -1)]
Event popped-------------------
(25, 'ServerA', 2)
None
Resource acquired--------------
<StateClasses.Resource object at 0x7f9ef95f4c10>
Resource Activated---------------------


{'ServerA': <StateClasses.Resource object at 0x7f9ef95f4c10>, 'ServerC': <StateClasses.Resource object at 0x7f9ef95f4cd0>}
Resource up and running
{'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}}


Asking for actions------------------------------


Random server is ServerC
[(27, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (28, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (29, 'ServerB', 2), (30, 0, -1)]
Defender Action exists-------------------
(28, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)


Event Queue---------------------------------------------


[(27, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (28, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (29, 'ServerB', 2), (30, 0, -1)]
Event popped-------------------
(27, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0)
<StateClasses.Resource object at 0x7f9ef95f4cd0>
Resource acquired--------------
<StateClasses.Resource object at 0x7f9ef95f4cd0>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 2, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.2}}


Asking for actions------------------------------


Random server is ServerC
[(28, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (29, 'ServerB', 2), (29, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 2, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 0), (30, 0, -1)]
Defender Action exists-------------------
(28, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)


Event Queue---------------------------------------------


[(28, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (29, 'ServerB', 2), (29, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 2, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 0), (30, 0, -1)]
Event popped-------------------
(28, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)
<StateClasses.Resource object at 0x7f9ef95f4cd0>
Resource acquired--------------
<StateClasses.Resource object at 0x7f9ef95f4cd0>
Reimaging now?----------------------
Reimaging--------------------ServerC

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 3, 'Total Downtime': 0, 'Probability of Compromise': 0}
{'ServerA': <StateClasses.Resource object at 0x7f9ef95f4c10>}
{'ServerB': <StateClasses.Resource object at 0x7f9ef95f4d10>, 'ServerC': <StateClasses.Resource object at 0x7f9ef95f4cd0>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 3, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerA
[(29, 'ServerB', 2), (30, 0, -1), (30, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (33, 'ServerC', 2)]
[(29, 'ServerB', 2), (30, 0, -1), (30, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (32, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (33, 'ServerC', 2)]


Event Queue---------------------------------------------


[(29, 'ServerB', 2), (30, 0, -1), (30, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (32, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (33, 'ServerC', 2)]
Event popped-------------------
(29, 'ServerB', 2)
None
Resource acquired--------------
<StateClasses.Resource object at 0x7f9ef95f4d10>
Resource Activated---------------------


{'ServerA': <StateClasses.Resource object at 0x7f9ef95f4c10>, 'ServerB': <StateClasses.Resource object at 0x7f9ef95f4d10>}
Resource up and running
{'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 3, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerA
[(30, 0, -1), (31, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (32, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (33, 'ServerC', 2)]
Defender Action exists-------------------
(32, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(30, 0, -1), (31, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (32, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (33, 'ServerC', 2)]
Event popped-------------------
(30, 0, -1)
Game is over
[<AgentClasses.Attacker object at 0x2807d50>]
[<AgentClasses.Defender object at 0x2807ed0>]
[<AgentClasses.Attacker object at 0x2807fd0>]
[<AgentClasses.Defender object at 0x280a150>]
Simulator successfully created
['ServerA', 'ServerB', 'ServerC']
Testing updateInformation------------------------------


[<AgentClasses.Attacker object at 0x2807f10>]
[<AgentClasses.Defender object at 0x2807d50>]
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerA
[(2, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (30, 0, -1)]
[(2, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]


Event Queue---------------------------------------------


[(2, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]
Event popped-------------------
(2, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0)
<StateClasses.Resource object at 0x2807cd0>
Resource acquired--------------
<StateClasses.Resource object at 0x2807cd0>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerB
[(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]
Defender Action exists-------------------
(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (30, 0, -1)]
Event popped-------------------
(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0)
<StateClasses.Resource object at 0x2807e10>
Resource acquired--------------
<StateClasses.Resource object at 0x2807e10>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'COMPR', 'Control': 'ATT', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}}


Asking for actions------------------------------


Random server is ServerB
[(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (6, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (30, 0, -1)]
Defender Action exists-------------------
(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (6, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (30, 0, -1)]
Event popped-------------------
(4, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)
<StateClasses.Resource object at 0x2807e10>
Resource acquired--------------
<StateClasses.Resource object at 0x2807e10>
Reimaging now?----------------------
Reimaging--------------------ServerC

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}
{'ServerA': <StateClasses.Resource object at 0x2807cd0>, 'ServerB': <StateClasses.Resource object at 0x2807e50>}
{'ServerC': <StateClasses.Resource object at 0x2807e10>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerB
[(6, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (9, 'ServerC', 2), (30, 0, -1)]
[(6, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (9, 'ServerC', 2), (30, 0, -1)]


Event Queue---------------------------------------------


[(6, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (9, 'ServerC', 2), (30, 0, -1)]
Event popped-------------------
(6, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0)
<StateClasses.Resource object at 0x2807cd0>
Resource acquired--------------
<StateClasses.Resource object at 0x2807cd0>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerB
[(8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 0), (9, 'ServerC', 2), (30, 0, -1)]
Defender Action exists-------------------
(8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)


Event Queue---------------------------------------------


[(8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}), 0), (9, 'ServerC', 2), (30, 0, -1)]
Event popped-------------------
(8, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)
<StateClasses.Resource object at 0x2807cd0>
Resource acquired--------------
<StateClasses.Resource object at 0x2807cd0>
Reimaging now?----------------------
Reimaging--------------------ServerA

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}
{'ServerB': <StateClasses.Resource object at 0x2807e50>}
{'ServerA': <StateClasses.Resource object at 0x2807cd0>, 'ServerC': <StateClasses.Resource object at 0x2807e10>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerB
[(9, 'ServerC', 2), (10, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (13, 'ServerA', 2), (30, 0, -1)]
[(9, 'ServerC', 2), (10, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (12, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (13, 'ServerA', 2), (30, 0, -1)]


Event Queue---------------------------------------------


[(9, 'ServerC', 2), (10, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (12, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (13, 'ServerA', 2), (30, 0, -1)]
Event popped-------------------
(9, 'ServerC', 2)
None
Resource acquired--------------
<StateClasses.Resource object at 0x2807e10>
Resource Activated---------------------


{'ServerB': <StateClasses.Resource object at 0x2807e50>, 'ServerC': <StateClasses.Resource object at 0x2807e10>}
Resource up and running
{'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerB
[(11, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (12, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (13, 'ServerA', 2), (30, 0, -1)]
Defender Action exists-------------------
(12, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(11, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (12, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (13, 'ServerA', 2), (30, 0, -1)]
Event popped-------------------
(11, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0)
<StateClasses.Resource object at 0x2807e50>
Resource acquired--------------
<StateClasses.Resource object at 0x2807e50>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerC
[(12, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (13, 'ServerA', 2), (13, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (30, 0, -1)]
Defender Action exists-------------------
(12, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(12, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (13, 'ServerA', 2), (13, ('ServerB', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (30, 0, -1)]
Event popped-------------------
(12, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)
<StateClasses.Resource object at 0x2807e50>
Resource acquired--------------
<StateClasses.Resource object at 0x2807e50>
Reimaging now?----------------------
Reimaging--------------------ServerB

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}
{'ServerC': <StateClasses.Resource object at 0x2807e10>}
{'ServerA': <StateClasses.Resource object at 0x2807cd0>, 'ServerB': <StateClasses.Resource object at 0x2807e50>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerC
[(13, 'ServerA', 2), (14, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (17, 'ServerB', 2), (30, 0, -1)]
[(13, 'ServerA', 2), (14, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (16, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (17, 'ServerB', 2), (30, 0, -1)]


Event Queue---------------------------------------------


[(13, 'ServerA', 2), (14, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (16, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (17, 'ServerB', 2), (30, 0, -1)]
Event popped-------------------
(13, 'ServerA', 2)
None
Resource acquired--------------
<StateClasses.Resource object at 0x2807cd0>
Resource Activated---------------------


{'ServerA': <StateClasses.Resource object at 0x2807cd0>, 'ServerC': <StateClasses.Resource object at 0x2807e10>}
Resource up and running
{'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerA
[(15, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (16, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (17, 'ServerB', 2), (30, 0, -1)]
Defender Action exists-------------------
(16, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(15, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (16, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (17, 'ServerB', 2), (30, 0, -1)]
Event popped-------------------
(15, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0)
<StateClasses.Resource object at 0x2807cd0>
Resource acquired--------------
<StateClasses.Resource object at 0x2807cd0>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerC
[(16, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (17, 'ServerB', 2), (17, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (30, 0, -1)]
Defender Action exists-------------------
(16, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(16, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (17, 'ServerB', 2), (17, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (30, 0, -1)]
Event popped-------------------
(16, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)
<StateClasses.Resource object at 0x2807e10>
Resource acquired--------------
<StateClasses.Resource object at 0x2807e10>
Reimaging now?----------------------
Reimaging--------------------ServerC

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}
{'ServerA': <StateClasses.Resource object at 0x2807cd0>}
{'ServerB': <StateClasses.Resource object at 0x2807e50>, 'ServerC': <StateClasses.Resource object at 0x2807e10>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerA
[(17, 'ServerB', 2), (18, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (21, 'ServerC', 2), (30, 0, -1)]
[(17, 'ServerB', 2), (18, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (20, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (21, 'ServerC', 2), (30, 0, -1)]


Event Queue---------------------------------------------


[(17, 'ServerB', 2), (18, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (20, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (21, 'ServerC', 2), (30, 0, -1)]
Event popped-------------------
(17, 'ServerB', 2)
None
Resource acquired--------------
<StateClasses.Resource object at 0x2807e50>
Resource Activated---------------------


{'ServerA': <StateClasses.Resource object at 0x2807cd0>, 'ServerB': <StateClasses.Resource object at 0x2807e50>}
Resource up and running
{'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerB
[(19, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (20, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (21, 'ServerC', 2), (30, 0, -1)]
Defender Action exists-------------------
(20, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)


Event Queue---------------------------------------------


[(19, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (20, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (21, 'ServerC', 2), (30, 0, -1)]
Event popped-------------------
(19, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0)
<StateClasses.Resource object at 0x2807cd0>
Resource acquired--------------
<StateClasses.Resource object at 0x2807cd0>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.2}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerA
[(20, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (21, 'ServerC', 2), (21, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (30, 0, -1)]
Defender Action exists-------------------
(20, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)


Event Queue---------------------------------------------


[(20, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (21, 'ServerC', 2), (21, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (30, 0, -1)]
Event popped-------------------
(20, ('ServerA', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)
<StateClasses.Resource object at 0x2807cd0>
Resource acquired--------------
<StateClasses.Resource object at 0x2807cd0>
Reimaging now?----------------------
Reimaging--------------------ServerA

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}
{'ServerB': <StateClasses.Resource object at 0x2807e50>}
{'ServerA': <StateClasses.Resource object at 0x2807cd0>, 'ServerC': <StateClasses.Resource object at 0x2807e10>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerB
[(21, 'ServerC', 2), (22, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (25, 'ServerA', 2), (30, 0, -1)]
[(21, 'ServerC', 2), (22, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (24, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (25, 'ServerA', 2), (30, 0, -1)]


Event Queue---------------------------------------------


[(21, 'ServerC', 2), (22, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (24, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (25, 'ServerA', 2), (30, 0, -1)]
Event popped-------------------
(21, 'ServerC', 2)
None
Resource acquired--------------
<StateClasses.Resource object at 0x2807e10>
Resource Activated---------------------


{'ServerB': <StateClasses.Resource object at 0x2807e50>, 'ServerC': <StateClasses.Resource object at 0x2807e10>}
Resource up and running
{'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerC
[(23, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (24, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (25, 'ServerA', 2), (30, 0, -1)]
Defender Action exists-------------------
(24, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(23, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (24, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (25, 'ServerA', 2), (30, 0, -1)]
Event popped-------------------
(23, ('ServerC', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0)
<StateClasses.Resource object at 0x2807e10>
Resource acquired--------------
<StateClasses.Resource object at 0x2807e10>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}}


Asking for actions------------------------------


Random server is ServerB
[(24, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (25, 'ServerA', 2), (25, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (30, 0, -1)]
Defender Action exists-------------------
(24, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(24, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (25, 'ServerA', 2), (25, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (30, 0, -1)]
Event popped-------------------
(24, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)
<StateClasses.Resource object at 0x2807e50>
Resource acquired--------------
<StateClasses.Resource object at 0x2807e50>
Reimaging now?----------------------
Reimaging--------------------ServerB

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}
{'ServerC': <StateClasses.Resource object at 0x2807e10>}
{'ServerA': <StateClasses.Resource object at 0x2807cd0>, 'ServerB': <StateClasses.Resource object at 0x2807e50>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}}


Asking for actions------------------------------


Random server is ServerC
[(25, 'ServerA', 2), (26, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (29, 'ServerB', 2), (30, 0, -1)]
[(25, 'ServerA', 2), (26, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (28, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (29, 'ServerB', 2), (30, 0, -1)]


Event Queue---------------------------------------------


[(25, 'ServerA', 2), (26, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (28, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (29, 'ServerB', 2), (30, 0, -1)]
Event popped-------------------
(25, 'ServerA', 2)
None
Resource acquired--------------
<StateClasses.Resource object at 0x2807cd0>
Resource Activated---------------------


{'ServerA': <StateClasses.Resource object at 0x2807cd0>, 'ServerC': <StateClasses.Resource object at 0x2807e10>}
Resource up and running
{'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}}


Asking for actions------------------------------


Random server is ServerC
[(27, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (28, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (29, 'ServerB', 2), (30, 0, -1)]
Defender Action exists-------------------
(28, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)


Event Queue---------------------------------------------


[(27, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0), (28, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (29, 'ServerB', 2), (30, 0, -1)]
Event popped-------------------
(27, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 0)
<StateClasses.Resource object at 0x2807e10>
Resource acquired--------------
<StateClasses.Resource object at 0x2807e10>
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 2, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.2}}


Asking for actions------------------------------


Random server is ServerA
[(28, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (29, 'ServerB', 2), (29, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (30, 0, -1)]
Defender Action exists-------------------
(28, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)


Event Queue---------------------------------------------


[(28, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1), (29, 'ServerB', 2), (29, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (30, 0, -1)]
Event popped-------------------
(28, ('ServerC', {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}), 1)
<StateClasses.Resource object at 0x2807e10>
Resource acquired--------------
<StateClasses.Resource object at 0x2807e10>
Reimaging now?----------------------
Reimaging--------------------ServerC

{'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 3, 'Total Downtime': 0, 'Probability of Compromise': 0}
{'ServerA': <StateClasses.Resource object at 0x2807cd0>}
{'ServerB': <StateClasses.Resource object at 0x2807e50>, 'ServerC': <StateClasses.Resource object at 0x2807e10>}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 3, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerA
[(29, 'ServerB', 2), (30, 0, -1), (30, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (33, 'ServerC', 2)]
[(29, 'ServerB', 2), (30, 0, -1), (30, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (32, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (33, 'ServerC', 2)]


Event Queue---------------------------------------------


[(29, 'ServerB', 2), (30, 0, -1), (30, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (32, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (33, 'ServerC', 2)]
Event popped-------------------
(29, 'ServerB', 2)
None
Resource acquired--------------
<StateClasses.Resource object at 0x2807e50>
Resource Activated---------------------


{'ServerA': <StateClasses.Resource object at 0x2807cd0>, 'ServerB': <StateClasses.Resource object at 0x2807e50>}
Resource up and running
{'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}
Updating information--------------------------------


Updating resource reports to
{'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 3, 'Total Downtime': 0, 'Probability of Compromise': 0}}


Asking for actions------------------------------


Random server is ServerB
[(30, 0, -1), (31, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (32, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (33, 'ServerC', 2)]
Defender Action exists-------------------
(32, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1)


Event Queue---------------------------------------------


[(30, 0, -1), (31, ('ServerB', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 0), (32, ('ServerA', {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}), 1), (33, 'ServerC', 2)]
Event popped-------------------
(30, 0, -1)
Game is over
{0: {'inactiveResources': {}, 'activeResources': {'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}}}, 2: {'inactiveResources': {}, 'activeResources': {'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'COMPR', 'Control': 'ATT', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}}}, 4: {'inactiveResources': {'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}, 'activeResources': {'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.2}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}}}, 6: {'inactiveResources': {'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}, 'activeResources': {'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}}}, 8: {'inactiveResources': {'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}, 'activeResources': {'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}}, 9: {'inactiveResources': {'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}, 'activeResources': {'ServerB': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 1, 'Reimage Count': 0, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}}, 11: {'inactiveResources': {'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}, 'activeResources': {'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}}, 12: {'inactiveResources': {'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}, 'activeResources': {'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}}, 13: {'inactiveResources': {'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}, 'activeResources': {'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}}, 15: {'inactiveResources': {'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}}, 'activeResources': {'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}}}, 16: {'inactiveResources': {'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}}, 'activeResources': {'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 1, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.1}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}}, 17: {'inactiveResources': {'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}}, 'activeResources': {'ServerA': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 2, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0.2}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}}, 19: {'inactiveResources': {'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}}, 'activeResources': {'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}}}, 20: {'inactiveResources': {'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}}, 'activeResources': {'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}}}, 21: {'inactiveResources': {'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}}, 'activeResources': {'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 1, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}}}, 23: {'inactiveResources': {'ServerA': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}}, 'activeResources': {'ServerC': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}}}, 24: {'inactiveResources': {'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}}, 'activeResources': {'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 1, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.1}}}, 25: {'inactiveResources': {'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}}, 'activeResources': {'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'PROBED', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 2, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0.2}}}, 27: {'inactiveResources': {'ServerB': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 3, 'Total Downtime': 0, 'Probability of Compromise': 0}}, 'activeResources': {'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}}}, 28: {'inactiveResources': {'ServerC': {'Status': 'DOWN', 'Control': 'DEF', 'Name': 'ServerC', 'Probes till now': 0, 'Reimage Count': 3, 'Total Downtime': 0, 'Probability of Compromise': 0}}, 'activeResources': {'ServerA': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerA', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}, 'ServerB': {'Status': 'HEALTHY', 'Control': 'DEF', 'Name': 'ServerB', 'Probes till now': 0, 'Reimage Count': 2, 'Total Downtime': 0, 'Probability of Compromise': 0}}}}
